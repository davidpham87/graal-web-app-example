FROM docker.io/cimg/clojure:1.10.3 AS builder

USER circleci

WORKDIR /home/circleci/project

COPY deps.edn .
RUN clojure -Spath

COPY src src
COPY resources resources
COPY config.edn .

# Compile into a uberjar
RUN clojure -X:depstar

FROM ghcr.io/graalvm/native-image AS native

WORKDIR /usr/src/app

COPY --from=builder /home/circleci/project/app.jar /usr/src/app/app.jar
COPY resource-config.json .
COPY reflectconfig.json .
COPY config.edn .

# Compile into a native binary
COPY _devops/compile.sh .

RUN chmod +x compile.sh

RUN ./compile.sh

FROM ubuntu AS native-tar

COPY --from=native /usr/src/app/app /
RUN tar -cjvf app.tar.bz2 app

FROM gcr.io/distroless/base

COPY --from=native-tar /app.tar.bz2 /

ENV PORT="8080"

ENV HOST="0.0.0.0"

EXPOSE 8080

COPY config.edn .

# Run the app
COPY _devops/start.sh .
CMD ["sh", "start.sh"]
